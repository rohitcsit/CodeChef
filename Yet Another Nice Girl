#include <iostream>
#include<bits/stdc++.h>
#include <boost/multiprecision/cpp_int.hpp>
using namespace boost::multiprecision;
#define ll int128_t
#define int long long
#define endl "\n"
#define mod 1000000007
using namespace std;

int power(int a, int b) {
  int res = 1;

  while (b) {
    if (b & 1) {
      res = res * a % mod;
    }

    b >>= 1;
    a = a * a % mod;
  }

  return res;
}

int inv(int a) {
  return power(a, mod - 2);
}

int32_t main() {
    cin.tie(0)->sync_with_stdio(false);
	int t;cin>>t;
	while(t--){
	    int n;cin>>n;
	    long double a[n],b[n];
	    for(int i=0;i<n;i++){cin>>a[i];a[i]=pow(a[i],1/a[i]);}
	    for(int i=0;i<n;i++){cin>>b[i];b[i]=pow(b[i],1/b[i]);}
	    sort(a,a+n);
	    sort(b,b+n);
	    int ans=0;
	    int j=0;
	    for(int i=0;i<n;i++){
	        while (j<n && b[i]>=a[j])j++;
	        ans+=n-j;
	    }
	    double sol=ans;
	    sol/=n;
	    cout<<fixed<<setprecision(6)<<sol<<endl;
	}
	cerr << "Time : " << 1000 * ((double)clock()) / CLOCKS_PER_SEC << "ms" << endl;
	return 0;
}
